import styled from "@emotion/styled";
import type { NextPage } from "next";
import Head from "next/head";
import Image from "next/image";
import Link from "next/link";
import { useQuery } from "react-query";

import getTodos, { Todo } from "../api/getTodos";
import styles from "../styles/Home.module.css";

const Home: NextPage<{ todos: [Todo] }> = (props) => {
  const { data: todos } = useQuery("todos", getTodos, {
    initialData: props.todos,
  });

  return (
    <div className={styles.container}>
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <main className={styles.main}>
        {todos?.map((todo) => (
          <TodoItem
            href={`/todos/${todo.id}`}
            key={todo.id}
            completed={todo.completed}
          >
            <a>
              {todo.id} - {todo.title}
            </a>
          </TodoItem>
        ))}
      </main>

      <footer className={styles.footer}>
        <span>
          Powered by{" "}
          <span className={styles.logo}>
            <Image src="/vercel.svg" alt="Vercel Logo" width={72} height={16} />
          </span>
        </span>
      </footer>
    </div>
  );
};

export async function getStaticProps() {
  console.log("Generating / ReGenerating");
  const todos = await getTodos();

  return {
    props: {
      todos,
    },
    revalidate: 10,
  };
}

type TodoItemProps = {
  completed: boolean;
};

const TodoItem = styled(Link)<TodoItemProps>`
  text-decoration: ${({ completed }) => (completed ? "line-through" : "none")};
`;

export default Home;
